'use client';

import { useState } from 'react';
import { 
  Button, 
  Card, 
  CardHeader, 
  CardTitle, 
  CardDescription, 
  CardContent, 
  CardFooter, 
  ProgressBar 
} from '@/components/ui';
import { 
  cn, 
  formatNumber, 
  calculateLevel
} from '@/lib/utils';

// –ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∏–º–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
const mockUser = {
  name: '–ê–ª–µ–∫—Å–µ–π',
  level: calculateLevel(1250),
  xp: 1250,
  streak: 7,
  totalModules: 12,
  completedModules: 8,
  skills: {
    '–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ': 85,
    '–û—Ä–∞—Ç–æ—Ä—Å–∫–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ': 67,
    '–ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥': 92,
    '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏': 41,
    '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç': 73,
    '–õ–∏–¥–µ—Ä—Å—Ç–≤–æ': 58
  }
};

export default function CharismaProDemo() {
  const [selectedSkill, setSelectedSkill] = useState<string>('–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ');
  const [activeButton, setActiveButton] = useState<string | null>(null);

  const skillKey = selectedSkill as keyof typeof mockUser.skills;
  const skillProgress = mockUser.skills[skillKey];
  const isActive = (variant: string) => activeButton === variant;

    return (
    <div className="flex flex-col items-center min-h-screen w-full bg-gradient-to-br from-slate-50 via-indigo-50 to-amber-50">
      {/* Header */}
      <div className="bg-white/80 backdrop-blur-sm border-b border-gray-200 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
            <div className="space-y-2">
              <h1 className="font-bold text-3xl md:text-4xl flex items-center gap-3">
                <span className="bg-gradient-to-r from-indigo-600 to-amber-500 bg-clip-text text-transparent">Charisma Pro</span>
                <span className="text-orange-500">üéØ</span>
      </h1>
              <p className="text-gray-600 font-medium">
                –î–µ–º–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–∏–∑–∞–π–Ω —Å–∏—Å—Ç–µ–º—ã - &ldquo;Duolingo –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –∏ —Ö–∞—Ä–∏–∑–º—ã&rdquo;
              </p>
            </div>
            <div className="flex flex-col sm:flex-row gap-3">
              <div className="flex items-center gap-2 px-4 py-2 bg-indigo-100 rounded-xl">
                <span className="text-indigo-600 font-semibold">–£—Ä–æ–≤–µ–Ω—å {mockUser.level}</span>
                <span className="text-gray-500">‚Ä¢</span>
                <span className="text-gray-600">{formatNumber(mockUser.xp)} XP</span>
              </div>
              <div className="flex items-center gap-2 px-4 py-2 bg-amber-100 rounded-xl">
                <span className="text-amber-600 font-semibold">üî• {mockUser.streak}</span>
                <span className="text-gray-500">–¥–Ω–µ–π –ø–æ–¥—Ä—è–¥</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="space-y-12">
          
          {/* Hero Section */}
          <section className="text-center space-y-6">
            <Card elevated className="max-w-4xl mx-auto">
              <CardHeader>
                <CardTitle className="text-4xl md:text-5xl">
                  –†–∞–∑–≤–∏–≤–∞–π—Ç–µ —Å–≤–æ—é —Ö–∞—Ä–∏–∑–º—É
                </CardTitle>
                <CardDescription className="text-xl md:text-2xl text-gray-600">
                  –ò–∑—É—á–∞–π—Ç–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –∏–≥—Ä–∞—é—á–∏, –∫–∞–∫ –Ω–æ–≤—ã–π —è–∑—ã–∫
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mt-6">
                  <div className="text-center">
                    <div className="text-3xl font-bold text-indigo-600">{mockUser.completedModules}</div>
                    <div className="text-gray-600">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π</div>
                  </div>
                  <div className="text-center">
                    <div className="text-3xl font-bold text-amber-600">{mockUser.streak}</div>
                    <div className="text-gray-600">–î–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</div>
                  </div>
                  <div className="text-center">
                    <div className="text-3xl font-bold text-emerald-600">{mockUser.level}</div>
                    <div className="text-gray-600">–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å</div>
                  </div>
                </div>
              </CardContent>
              <CardFooter className="justify-center">
                <Button size="lg" variant="primary">
                  –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ
                </Button>
              </CardFooter>
            </Card>
          </section>

          {/* Buttons Section */}
          <section>
            <Card>
              <CardHeader>
                <CardTitle>–ö–Ω–æ–ø–∫–∏ –∏ –∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç—ã</CardTitle>
                <CardDescription>
                  –†–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                  {/* Primary variants */}
                  <div className="space-y-4">
                    <h3 className="font-semibold text-lg text-gray-700">–û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
                    <div className="flex flex-col gap-3">
                      <Button 
                        variant="primary" 
                        onClick={() => setActiveButton('primary')}
                        className={cn(isActive('primary') && 'ring-4 ring-indigo-200')}
                      >
                        Primary Action
                      </Button>
                      <Button 
                        variant="accent"
                        onClick={() => setActiveButton('accent')}
                        className={cn(isActive('accent') && 'ring-4 ring-amber-200')}
                      >
                        Accent Action
                      </Button>
                      <Button 
                        variant="success"
                        onClick={() => setActiveButton('success')}
                        className={cn(isActive('success') && 'ring-4 ring-emerald-200')}
                      >
                        Success Action
                      </Button>
                      <Button 
                        variant="error"
                        onClick={() => setActiveButton('error')}
                        className={cn(isActive('error') && 'ring-4 ring-red-200')}
                      >
                        Error Action
                      </Button>
                    </div>
                  </div>

                  {/* Secondary variants */}
                  <div className="space-y-4">
                    <h3 className="font-semibold text-lg text-gray-700">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ</h3>
                    <div className="flex flex-col gap-3">
                      <Button variant="outline">Outline Button</Button>
                      <Button variant="ghost">Ghost Button</Button>
                      <Button isLoading>Loading...</Button>
                      <Button disabled>Disabled Button</Button>
                    </div>
                  </div>

                  {/* Sizes */}
                  <div className="space-y-4">
                    <h3 className="font-semibold text-lg text-gray-700">–†–∞–∑–º–µ—Ä—ã</h3>
                    <div className="flex flex-col gap-3">
                      <Button size="sm" variant="primary">Small</Button>
                      <Button size="md" variant="primary">Medium</Button>
                      <Button size="lg" variant="primary">Large</Button>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </section>

          {/* Cards Section */}
          <section>
            <Card>
              <CardHeader>
                <CardTitle>–ö–∞—Ä—Ç–æ—á–∫–∏ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ</CardTitle>
                <CardDescription>
                  –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {/* Course Card */}
                  <Card interactive>
                    <CardHeader>
                      <CardTitle className="text-lg">–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ</CardTitle>
                      <CardDescription>
                        –û—Å–Ω–æ–≤—ã —É–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏
                      </CardDescription>
                    </CardHeader>
                    <CardContent>
                      <div className="space-y-3">
                        <ProgressBar 
                          value={85} 
                          variant="success" 
                          label="–ü—Ä–æ–≥—Ä–µ—Å—Å" 
                          size="sm"
                        />
                        <div className="flex justify-between text-sm text-gray-600">
                          <span>8 –∏–∑ 10 —É—Ä–æ–∫–æ–≤</span>
                          <span>850 XP</span>
                        </div>
                      </div>
                    </CardContent>
                    <CardFooter>
                      <Button variant="primary" size="sm" className="w-full">
                        –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                      </Button>
                    </CardFooter>
                  </Card>

                  {/* Skill Card */}
                  <Card interactive elevated>
                    <CardHeader>
                      <CardTitle className="text-lg">–û—Ä–∞—Ç–æ—Ä—Å–∫–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ</CardTitle>
                      <CardDescription>
                        –ù–∞—É—á–∏—Ç–µ—Å—å –≥–æ–≤–æ—Ä–∏—Ç—å —É–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ
                      </CardDescription>
                    </CardHeader>
                    <CardContent>
                      <div className="space-y-3">
                        <ProgressBar 
                          value={67} 
                          variant="accent" 
                          label="–ü—Ä–æ–≥—Ä–µ—Å—Å" 
                          size="sm"
                        />
                        <div className="flex justify-between text-sm text-gray-600">
                          <span>6 –∏–∑ 9 —É—Ä–æ–∫–æ–≤</span>
                          <span>670 XP</span>
                        </div>
                      </div>
                    </CardContent>
                    <CardFooter>
                      <Button variant="accent" size="sm" className="w-full">
                        –ù–∞—á–∞—Ç—å –∫—É—Ä—Å
                      </Button>
                    </CardFooter>
                  </Card>

                  {/* Achievement Card */}
                  <Card interactive>
                    <CardHeader>
                      <CardTitle className="text-lg flex items-center gap-2">
                        üéØ –ù–µ–¥–µ–ª—è —É—Å–ø–µ—Ö–∞
                      </CardTitle>
                      <CardDescription>
                        –£—á–∏—Ç–µ—Å—å 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥
                      </CardDescription>
                    </CardHeader>
                    <CardContent>
                      <div className="flex items-center justify-center py-4">
                        <div className="text-center">
                          <div className="text-3xl font-bold text-amber-600">{mockUser.streak}</div>
                          <div className="text-sm text-gray-600">–¥–Ω–µ–π –ø–æ–¥—Ä—è–¥</div>
                        </div>
                      </div>
                    </CardContent>
                    <CardFooter>
                      <Button variant="ghost" size="sm" className="w-full">
                        ‚≠ê –ü–æ–ª—É—á–µ–Ω–æ
                      </Button>
                    </CardFooter>
                  </Card>
                </div>
              </CardContent>
            </Card>
          </section>

          {/* Progress Bars Section */}
          <section>
            <Card>
              <CardHeader>
                <CardTitle>–ü—Ä–æ–≥—Ä–µ—Å—Å –∏ –Ω–∞–≤—ã–∫–∏</CardTitle>
                <CardDescription>
                  –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –Ω–∞–≤—ã–∫–∞—Ö —Ö–∞—Ä–∏–∑–º—ã
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-6">
                  {/* Skill Selection */}
                  <div className="flex flex-wrap gap-2">
                    {Object.keys(mockUser.skills).map((skill) => (
                      <Button
                        key={skill}
                        variant={selectedSkill === skill ? 'primary' : 'ghost'}
                        size="sm"
                        onClick={() => setSelectedSkill(skill)}
                      >
                        {skill}
                      </Button>
                    ))}
                  </div>

                  {/* Selected Skill Progress */}
                  <div className="space-y-4">
                    <h3 className="text-xl font-semibold text-gray-800">{selectedSkill}</h3>
                    <ProgressBar
                      value={skillProgress}
                      variant="primary"
                      label="–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å"
                      size="lg"
                      showLabel={true}
                    />
                    <div className="grid grid-cols-2 gap-4 text-center">
                      <div className="bg-indigo-50 p-4 rounded-xl">
                        <div className="text-2xl font-bold text-indigo-600">{skillProgress}%</div>
                        <div className="text-sm text-gray-600">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</div>
                      </div>
                      <div className="bg-amber-50 p-4 rounded-xl">
                        <div className="text-2xl font-bold text-amber-600">{skillProgress * 10}</div>
                        <div className="text-sm text-gray-600">XP –ø–æ–ª—É—á–µ–Ω–æ</div>
                      </div>
                    </div>
                  </div>

                  {/* All Skills Overview */}
                  <div className="space-y-3">
                    <h4 className="font-semibold text-lg text-gray-700">–í—Å–µ –Ω–∞–≤—ã–∫–∏</h4>
                    {Object.entries(mockUser.skills).map(([skill, progress]) => (
                      <div key={skill} className="flex items-center gap-3">
                        <span className="min-w-[140px] text-sm text-gray-700">
                          {skill}
                        </span>
                        <div className="flex-1">
                          <ProgressBar
                            value={progress}
                            variant={progress >= 80 ? 'success' : progress >= 60 ? 'accent' : 'primary'}
                            size="sm"
                            showLabel={false}
                          />
                        </div>
                        <span className="min-w-[40px] text-sm text-gray-600 text-right">
                          {progress}%
                        </span>
                      </div>
                    ))}
                  </div>
                </div>
              </CardContent>
            </Card>
          </section>

          {/* Interactive Elements */}
          <section>
            <Card>
              <CardHeader>
                <CardTitle>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã</CardTitle>
                <CardDescription>
                  –ü—Ä–∏–º–µ—Ä—ã –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ –¥–µ–π—Å—Ç–≤–∏–∏
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                  {/* Interactive Card Demo */}
                  <div className="space-y-4">
                    <h3 className="font-semibold text-lg text-gray-700">–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞</h3>
                    <Card 
                      interactive 
                      className="cursor-pointer"
                      onClick={() => alert('–ö–∞—Ä—Ç–æ—á–∫–∞ –∫–ª–∏–∫–Ω—É—Ç–∞!')}
                    >
                      <CardContent>
                        <p className="text-center text-gray-600 py-4">
                          –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –º–µ–Ω—è —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!
                        </p>
                      </CardContent>
                    </Card>
                  </div>

                  {/* Color Variations */}
                  <div className="space-y-4">
                    <h3 className="font-semibold text-lg text-gray-700">–¶–≤–µ—Ç–æ–≤—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã</h3>
                    <div className="grid grid-cols-2 gap-3">
                      <div className="space-y-2">
                        <div className="h-4 rounded bg-indigo-500"></div>
                        <div className="h-4 rounded bg-amber-500"></div>
                        <div className="h-4 rounded bg-emerald-500"></div>
                        <div className="h-4 rounded bg-red-500"></div>
                      </div>
                      <div className="space-y-2 text-sm">
                        <div className="text-gray-600">Primary (–ò–Ω–¥–∏–≥–æ)</div>
                        <div className="text-gray-600">Accent (Amber)</div>
                        <div className="text-gray-600">Success (Emerald)</div>
                        <div className="text-gray-600">Error (Red)</div>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </section>

          {/* Design System Info */}
          <section>
            <Card>
              <CardHeader>
                <CardTitle>–û –¥–∏–∑–∞–π–Ω —Å–∏—Å—Ç–µ–º–µ Charisma Pro</CardTitle>
                <CardDescription>
                  –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –∏ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏ –¥–∏–∑–∞–π–Ω–∞
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                  <div className="space-y-4">
                    <h3 className="font-semibold text-lg text-gray-700">–§–∏–ª–æ—Å–æ—Ñ–∏—è</h3>
                    <ul className="space-y-2 text-gray-600">
                      <li>‚ú® <strong>–ò–≥—Ä–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã</strong> - –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ –≤ –∏–≥—Ä—É</li>
                      <li>üéØ <strong>–ü—Ä–æ–≥—Ä–µ—Å—Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è</strong> - —á–µ—Ç–∫–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</li>
                      <li>üé® <strong>–ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å</strong> - –µ–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å –ø–æ –≤—Å–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é</li>
                      <li>üì± <strong>–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å</strong> - —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö</li>
                      <li>‚ö° <strong>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</strong> - –æ—Ç–∑—ã–≤—á–∏–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</li>
                    </ul>
                  </div>
                  <div className="space-y-4">
                    <h3 className="font-semibold text-lg text-gray-700">–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã</h3>
                    <ul className="space-y-2 text-gray-600">
                      <li>üîò <strong>Buttons</strong> - 6 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ | 3 —Ä–∞–∑–º–µ—Ä–∞</li>
                      <li>üìã <strong>Cards</strong> - –æ–±—ã—á–Ω—ã–µ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ</li>
                      <li>üìä <strong>ProgressBar</strong> - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</li>
                      <li>üé® <strong>–¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞</strong> - primary, accent, success, error</li>
                      <li>üìù <strong>–¢–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞</strong> - —á–µ—Ç–∫–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è —Ç–µ–∫—Å—Ç–∞</li>
                    </ul>
                  </div>
                </div>
              </CardContent>
            </Card>
          </section>

        </div>
      </div>
    </div>
  );
  }